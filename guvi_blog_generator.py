# -*- coding: utf-8 -*-
"""GUVI-BLOG_GENERATOR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sKQ4iGi9zcrQEym8uUc8SEqXbbGPy3fL
"""

pip install transformers torch

from transformers import pipeline

generator = pipeline('text-generation', model='gpt2')

generator = pipeline('text-generation', model='gpt2')

# Generate text
generated_text = generator("Once upon a time", max_length=50)
print(generated_text)

pip install huggingface_hub

from huggingface_hub import login

token = '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'  # replace with your actual token
login(token=token, add_to_git_credential=True)

def generate_blog(topic, additional_pointers):
    prompt = f"""


    Topic: {topic}
    Additional pointers: {additional_pointers}
    """

    response = generator(prompt, max_length=600, num_return_sequences=1, temperature=0.7)
    return response[0]['generated_text']

topic = "Heart Attack"
additional_pointers = "Risk factors, prevention, and treatment"
blog_content = generate_blog(topic, additional_pointers)
print(blog_content)

new

import torch
from transformers import GPT2LMHeadModel, GPT2Tokenizer

model_name = "gpt2"  # or "gpt2-medium" for better results
tokenizer = GPT2Tokenizer.from_pretrained(model_name)
model = GPT2LMHeadModel.from_pretrained(model_name)

device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
model.to(device)

def generate_blog(prompt, max_length=300):
    inputs = tokenizer.encode(prompt, return_tensors="pt").to(device)  # Move to the correct device
    attention_mask = torch.ones(inputs.shape, dtype=torch.long).to(device)  # Move to the correct device

    outputs = model.generate(
        inputs,
        attention_mask=attention_mask,
        max_length=max_length,
        num_return_sequences=1,
        no_repeat_ngram_size=2,
        early_stopping=True,
        pad_token_id=tokenizer.eos_token_id
    )

    generated_text = tokenizer.decode(outputs[0], skip_special_tokens=True)
    return generated_text

topic = input("Enter a topic: ")
additional_pointers = input("Enter any additional pointers, if any: ")

prompt = (f"You are a copywriter with years of experience writing impactful blogs. "
          f"Write a blog on the topic '{topic}' with the following pointers: {additional_pointers}. "
          f"Make sure to include titles and subtitles.")

blog_content = generate_blog(prompt, max_length=700)
print(blog_content)



